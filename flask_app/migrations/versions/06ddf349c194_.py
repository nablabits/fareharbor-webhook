"""empty message

Revision ID: 06ddf349c194
Revises: 3da8ac0df2af
Create Date: 2021-07-10 06:55:54.199632

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '06ddf349c194'
down_revision = '3da8ac0df2af'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('company_booking_id_key', 'company', type_='unique')
    op.drop_constraint('company_booking_id_fkey', 'company', type_='foreignkey')
    op.create_foreign_key(None, 'company', 'booking', ['id'], ['id'])
    op.drop_column('company', 'booking_id')
    op.alter_column('custom_field', 'field_type',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.alter_column('custom_field', 'is_always_per_customer',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('custom_field', 'is_required',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('custom_field', 'is_taxable',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    op.alter_column('custom_field', 'title',
               existing_type=sa.VARCHAR(length=64),
               nullable=True)
    op.add_column('custom_field_instance', sa.Column('customer_type_rate_id', sa.BigInteger(), nullable=True))
    op.alter_column('custom_field_instance', 'custom_field_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'custom_field_instance', 'customer_type_rate', ['customer_type_rate_id'], ['id'])
    op.alter_column('custom_field_value', 'booking_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('custom_field_value', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('customer', sa.Column('checkin_status', sa.String(length=64), nullable=True))
    op.drop_column('customer', 'checking_status')
    op.add_column('customer_type_rate', sa.Column('total', sa.Integer(), nullable=True))
    op.add_column('customer_type_rate', sa.Column('total_including_tax', sa.Integer(), nullable=True))
    op.alter_column('customer_type_rate', 'capacity',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('customer_type_rate', 'maximum_party_size',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.alter_column('customer_type_rate', 'minimum_party_size',
               existing_type=sa.SMALLINT(),
               nullable=True)
    op.drop_constraint('customer_type_rate_booking_id_fkey', 'customer_type_rate', type_='foreignkey')
    op.drop_column('customer_type_rate', 'booking_id')
    op.drop_constraint('effective_cancellation_policy_booking_id_key', 'effective_cancellation_policy', type_='unique')
    op.drop_constraint('effective_cancellation_policy_booking_id_fkey', 'effective_cancellation_policy', type_='foreignkey')
    op.create_foreign_key(None, 'effective_cancellation_policy', 'booking', ['id'], ['id'])
    op.drop_column('effective_cancellation_policy', 'booking_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('effective_cancellation_policy', sa.Column('booking_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'effective_cancellation_policy', type_='foreignkey')
    op.create_foreign_key('effective_cancellation_policy_booking_id_fkey', 'effective_cancellation_policy', 'booking', ['booking_id'], ['id'])
    op.create_unique_constraint('effective_cancellation_policy_booking_id_key', 'effective_cancellation_policy', ['booking_id'])
    op.add_column('customer_type_rate', sa.Column('booking_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('customer_type_rate_booking_id_fkey', 'customer_type_rate', 'booking', ['booking_id'], ['id'])
    op.alter_column('customer_type_rate', 'minimum_party_size',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('customer_type_rate', 'maximum_party_size',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.alter_column('customer_type_rate', 'capacity',
               existing_type=sa.SMALLINT(),
               nullable=False)
    op.drop_column('customer_type_rate', 'total_including_tax')
    op.drop_column('customer_type_rate', 'total')
    op.add_column('customer', sa.Column('checking_status', sa.VARCHAR(length=64), autoincrement=False, nullable=True))
    op.drop_column('customer', 'checkin_status')
    op.alter_column('custom_field_value', 'customer_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('custom_field_value', 'booking_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'custom_field_instance', type_='foreignkey')
    op.alter_column('custom_field_instance', 'custom_field_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('custom_field_instance', 'customer_type_rate_id')
    op.alter_column('custom_field', 'title',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.alter_column('custom_field', 'is_taxable',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('custom_field', 'is_required',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('custom_field', 'is_always_per_customer',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('custom_field', 'field_type',
               existing_type=sa.VARCHAR(length=64),
               nullable=False)
    op.add_column('company', sa.Column('booking_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'company', type_='foreignkey')
    op.create_foreign_key('company_booking_id_fkey', 'company', 'booking', ['booking_id'], ['id'])
    op.create_unique_constraint('company_booking_id_key', 'company', ['booking_id'])
    # ### end Alembic commands ###
